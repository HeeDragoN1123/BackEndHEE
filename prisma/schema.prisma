// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// cuid 쓰기 uuid  대체
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


//회원가입 테이블 정의
model Users {
  id          Int   @id @default(autoincrement())
  name        String    @unique 
  email       String    @unique 
  password    String    
  avatarUrl   String    
  description String    
  githubUrl   String    
  linkedinUrl String    
  createdAt   DateTime  @default(now()) 
  //updatedAt   DateTime  @updatedAt @map("updatedAt")


  //관계 설정
  projects      Projects[]        
  viewLogs      ViewLogs[]
  likes         Likes []         
  bookmarks     Bookmarks [] 


}


// 프로젝트 테이블 정의

model Projects {
  id   Int       @id @default(autoincrement())
  title       String    
  description String   
  image       String    
  liveSiteUrl String    
  githubUrl   String    
  category    String    
  createdAt   DateTime  @default(now()) 
  //updatedAt DateTime  @updatedAt @map("updatedAt")

  //외래키
  userId        Int       


  // 관계 설정
  users Users @relation(fields: [userId], references: [id],onDelete: Cascade)
  
  viewsLogs ViewLogs[]
  likes     Likes []
  bookmarks Bookmarks []   
  

}


//뷰로그 테이블 정의
model ViewLogs {
  
  id          Int       @id @default(autoincrement())
  viewedAt    DateTime  @default(now()) 

  // 외래키
  projectId     Int       
  userId        Int       
 
 
 // 관계 설정
  projects    Projects  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  users       Users     @relation(fields: [userId], references: [id],onDelete: Cascade)


}



//좋아요 테이블 정의
model Likes {
  id        Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now()) 

  // 외래 키
  projectId     Int       
  userId        Int      

  // 관계 설정
  users         Users     @relation(fields: [userId], references: [id], onDelete: Cascade)
  projects      Projects  @relation(fields: [projectId], references: [id], onDelete: Cascade)


}



//북마크 테이블 정의 
model Bookmarks {
  id   Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now()) 

  // 외래 키
  projectId    Int      
  userId        Int      

  // 관계 설정
  users         Users     @relation(fields: [userId], references: [id], onDelete: Cascade)
  projects      Projects  @relation(fields: [projectId], references: [id], onDelete: Cascade)


}